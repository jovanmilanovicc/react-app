{"version":3,"sources":["components/newExpense/ExpenseFilter.js","components/ExpenseDate.js","components/Expenseitem.js","components/ExpenseList.js","components/Charts/ChartBar.js","components/Charts/Chart.js","components/newExpense/ExpenseChart.js","components/Expenses.js","components/newExpense/ExpenseForm.js","components/newExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseFilter","props","className","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Expenseitem","title","amount","ExpenseList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpense","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpense","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4c3c9623.chunk.js","sourcesContent":["import './ExpenseFilter.css';\r\n\r\nconst ExpenseFilter = (props) => {\r\n    const dropdownChangeHandler= (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n        \r\n    }\r\n    return(\r\n        <div className='expenses-filter'>\r\n      <div className='expenses-filter_control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseFilter;","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date_month\">{month} </div>\r\n      <div className=\"expense-date_year\">{year} </div>\r\n      <div className=\"expense-date_day\">{day} </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\n\r\nfunction Expenseitem(props) {\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <li>\r\n    <div className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item_description\">\r\n        <h2>{props.title}</h2>\r\n      </div>\r\n      <div className=\"expense-item_price\">${props.amount}</div>\r\n      \r\n    </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Expenseitem;\r\n","import './ExpenseList.css';\r\nimport ExpenseItem from \"./Expenseitem\";\r\n\r\nconst ExpenseList= props => {\r\n  if(props.items.length === 0){\r\n    return <h2 className='expenses-list_fallback'>Found no expenses</h2>;\r\n  }\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map(expense => (<ExpenseItem\r\n      key={expense.id}\r\n      title={expense.title}\r\n      amount={expense.amount}\r\n      date={expense.date}/>\r\n      ))}\r\n\r\n    </ul>\r\n  );\r\n\r\n}\r\n\r\nexport default ExpenseList;","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n    let barFillHeight = '0%';\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n       \r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar_inner'>\r\n                <div className='chart-bar_fill' style={{height: barFillHeight,}}></div>\r\n                </div>\r\n                <di className='chart-bar_label'>{props.label}</di>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = props => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(... dataPointValues);\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint => <ChartBar\r\n            key={dataPoint.label} \r\n            value={dataPoint.value} \r\n            maxValue={totalMaximum} \r\n            label={dataPoint.label}\r\n            />)}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Chart;","import Chart from '../Charts/Chart';\r\n\r\nconst ExpenseChart = props =>{\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Avg', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return(\r\n        <Chart dataPoints={chartDataPoints} />\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseChart;","import React, {useState} from \"react\";\r\nimport './Expenses.css';\r\nimport ExpenseFilter from \"./newExpense/ExpenseFilter\";\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpenseChart from './newExpense/ExpenseChart';\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpense = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"expenses\">\r\n      <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\r\n      <ExpenseChart  expenses={filteredExpense}   />\r\n      <ExpenseList items={filteredExpense}/>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  /* const [userInput, setUserInput] = useState({\r\n    enteredTitle: '',\r\n    enteredAmount: '',\r\n    enteredDate: ''\r\n  }) */\r\n\r\n  const titleChangeHandler = (event) => {\r\n    /*setUserInput({\r\n        ...userInput,\r\n        enteredTitle: event.target.value\r\n    })*/\r\n    /* setUserInput= (prevState) => {\r\n        return{\r\n            ...prevState,\r\n            enteredTitle: event.target.value\r\n        }\r\n    } */\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  \r\n  const amountChangedHandler = (event) => {\r\n    /* setUserInput({\r\n        ...userInput,\r\n        enteredAmount: event.target.value\r\n    }) */\r\n    setEnteredAmount(event.target.value);\r\n  }\r\n  const dateChangedHandler = (event) => {\r\n    /* setUserInput({\r\n        ...userInput,\r\n        enteredDate: event.target.value\r\n    }) */\r\n    setEnteredDate(event.target.value);\r\n}\r\n   const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const expenseData = {\r\n        title: enteredTitle,\r\n        amount: +enteredAmount,\r\n        date: new Date(enteredDate)\r\n        //sdajsdhasdkhasdkh\r\n    }\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n    setEnteredTitle('');\r\n\r\n   }\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense_controls\">\r\n        <div className=\"new-expense_control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense_control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangedHandler}/>\r\n        </div>\r\n        <div className=\"new-expense_control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangedHandler}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense_actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\n\r\nimport './NewExpense.css';\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] =  useState(false);\r\n    const saveDataExpenseHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditing = () => {\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stopEditing = () =>{\r\n        setIsEditing(false)\r\n    }\r\n\r\n    return(\r\n    <div className=\"new-expense\">\r\n        {!isEditing && <button onClick={startEditing}>Add new expense</button>}\r\n        {isEditing && <ExpenseForm onSaveExpenseData={saveDataExpenseHandler} onCancel={stopEditing}/>}\r\n      \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses\";\r\nimport NewExpense from \"./components/newExpense/NewExpense\";\r\n\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { \r\n    id: \"e2\", \r\n    title: \"New TV\", \r\n    amount: 799.49, \r\n    date: new Date(2021, 2, 12) \r\n  },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450.12,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpense) => {\r\n      return [expense, ...prevExpense];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler}/>\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}